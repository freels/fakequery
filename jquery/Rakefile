DIST = 'dist'
BUILD = 'build'
SRC = 'src'

directory DIST

def concat_filelist(files, dest)
  File.open(dest, 'w') do |dest_fd|
    dest_fd << files.collect { |f| File.read(f) }.join("\n")
  end
end

desc "build minified and development fakequery fbjs files"
task :build => ['build:development', 'build:min']

namespace :build do
  
  desc "build development versions of fq core and fq extensions"
  task :development => [:core, :extensions]
  
  desc "build minified versions of fq sources"
  task :min => :development do
    printf "minifying distribution files..."; $stdout.flush
    
    %w(fq-core.js fq-extensions.js).collect{|f| File.join(DIST, f)}.each do |src|
      system('java', '-jar', File.join(BUILD, 'js.jar'), File.join(BUILD, 'build/min.js'), src)
    end
    
    puts 'done'
  end
  
  desc "build fq core"
  task :core => :dist do
    puts "building core"
    
    files = %w(preamble.js intro.js core.js selector.js event.js outro.js).collect { |f| File.join(SRC, f) }
    concat_filelist(files, File.join(DIST, "fq-core.js"))
  end
  
  desc "build fq extensions"
  task :extensions => :dist do
    puts 'building extensions'
    
    # TODO: reenable ajax.js
    files = %w(preamble.js ext_intro.js fx.js dimensions.js offset.js ext_outro.js).collect { |f| File.join(SRC, f) }
    concat_filelist(files, File.join(DIST, "fq-extensions.js"))
  end
  
end

desc "cleans up all generated files"
task :clean do
  puts "removing distribution files"
  system('rm', '-rf', DIST)
end